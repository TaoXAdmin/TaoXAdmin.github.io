---
import BaseLayout from '../../layouts/BaseLayout.astro';

const lang = 'fr';
const pageTitle = 'Cas d’étude - Alexis Fiska';
const pageDescription =
  "Études de cas QA : Xpollens (BaaS BPCE) – automatisation from scratch, CI/CD Azure, fiabilité des parcours critiques ; Ornikar Assurance – E2E robuste, intégration comparateurs, exécutions PR Jenkins/K8s.";
const BASE = import.meta.env.BASE_URL ?? '/';
---
<BaseLayout lang={lang} title={pageTitle} description={pageDescription}>
  <h1 class="text-3xl font-bold mb-6 text-center">Cas d’étude</h1>
  <p class="max-w-3xl mx-auto mb-10 text-neutral-700 dark:text-neutral-300 text-center">
    Chaque projet est unique. Voici des résumés “light” avant la lecture des études détaillées. Les chiffres précis
    sont volontairement anonymisés conformément aux accords de confidentialité (NDA).
  </p>

  <!-- Xpollens -->
  <article class="mb-12">
    <h2 class="text-2xl font-semibold mb-2 text-blue-600 dark:text-blue-400">Xpollens (Groupe BPCE)</h2>
    <figure class="mb-4">
      <img
        src={`${BASE}images/cases/xpollens/hero.svg`}
        alt="Xpollens — pipeline CI/CD et parcours critiques bancaires"
        loading="lazy"
        class="w-full rounded-2xl shadow-sm"
      />
      <figcaption class="mt-2 text-sm text-neutral-600 dark:text-neutral-400">
        Automatisation from scratch : E2E/API, CI/CD Azure, reporting Teams/Email.
      </figcaption>
    </figure>

    <h3 class="text-xl font-semibold mt-4 mb-1">Contexte</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      Fintech BaaS opérant des produits critiques (Izly, Bimpli, Money Walkie, marketplace Leroy Merlin/Adeo,
      Autodoc SEPA, Nirio/FDJ...). À mon arrivée : 0 automatisation, 7 squads avec QA manuel, recettes longues,
      incidents par périodes, forte contrainte réglementaire (RGPD/KYC/LCB-FT).
    </p>

    <h3 class="text-xl font-semibold mt-4 mb-1">Objectifs</h3>
    <ul class="list-disc pl-5 mb-3 text-neutral-700 dark:text-neutral-300 space-y-1">
      <li>Démarrer l’automatisation E2E/API et sécuriser les parcours monétiques &amp; comptes.</li>
      <li>Industrialiser une pipeline <strong>Azure DevOps</strong> (build/test/report) qualif/intégration/prod (smoke).</li>
      <li>Réduire la recette manuelle ; structurer NR/triage/observabilité.</li>
    </ul>

    <h3 class="text-xl font-semibold mt-4 mb-1">Approche & résultats</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      Framework C# (SpecFlow/Selenium/RestSharp), Page Objects stables, données anonymisées, retries bornés, anti-flakes.
      2 runs/jour, reporting Teams + email, screenshots &amp; journaux. Couverture critique &gt;≈100% en M6, recette ÷2,
      −23% d’incidents l’année 1.
    </p>

    <p class="mt-4">
      <a href={`${BASE}fr/cases/xpollens`} class="inline-block px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700">
        Lire l’étude détaillée
      </a>
    </p>
  </article>

  <!-- Ornikar -->
  <article class="mb-12">
    <h2 class="text-2xl font-semibold mb-2 text-blue-600 dark:text-blue-400">Ornikar (Assurance)</h2>
    <figure class="mb-4">
      <img
        src={`${BASE}images/cases/ornikar/i18n/fr/hero.svg`}
        alt="Ornikar (Assurance) — QA Automation & CI/CD, devis auto, paiement, comparateurs intégrés"
        loading="lazy"
        class="w-full rounded-2xl shadow-sm"
      />
      <figcaption class="mt-2 text-sm text-neutral-600 dark:text-neutral-400">
        E2E robuste (10 profils), exécutions PR &amp; quotidiennes, intégration comparateurs (LesFurets, LeLynx, MeilleureAssurance).
      </figcaption>
    </figure>

    <h3 class="text-xl font-semibold mt-4 mb-1">Contexte</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      Tests bout-en-bout de la plateforme Assurance Auto : création compte, devis (44 M véhicules, 3 offres), paiement.
      Vérification de l’intégration de 3 comparateurs aux contraintes différentes, avec collecte/gestion de données tarifaires.
    </p>

    <h3 class="text-xl font-semibold mt-4 mb-1">Objectifs</h3>
    <ul class="list-disc pl-5 mb-3 text-neutral-700 dark:text-neutral-300 space-y-1">
      <li>Stabiliser l’E2E existant &amp; fiabiliser les parcours critiques.</li>
      <li>Automatiser au maximum malgré l’absence d’environnements comparateurs.</li>
      <li>Accélérer la cadence de releases avec des runs PR + quotidiens.</li>
    </ul>

    <h3 class="text-xl font-semibold mt-4 mb-1">Approche & résultats</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      TS/React, Selenium/Playwright, Appium, Jenkins+Kubernetes, Xray. Page Objects, test-data builders, randomisation
      contrôlée, retries &amp; waits progressifs. 2 runs/jour (~25 min), exécutions PR, screenshots/logs/API, notifications Slack/Email.
      100% des parcours critiques couverts (M1) puis maintien, stabilité accrue, recettes comparateurs gérées en manuel ciblé.
    </p>

    <p class="mt-4">
      <a href={`${BASE}fr/cases/ornikar`} class="inline-block px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700">
        Lire l’étude détaillée
      </a>
    </p>
  </article>
</BaseLayout>
