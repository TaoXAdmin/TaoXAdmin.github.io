---
import BaseLayout from '../../layouts/BaseLayout.astro';

const lang = 'de';
const pageTitle = 'Fallstudien – Alexis Fiska';
const pageDescription =
  'QA-Fallstudien: Xpollens (BPCE BaaS) – Greenfield-Automatisierung, Azure CI/CD, stabile kritische Journeys; Ornikar Versicherung – robustes E2E, Vergleicher-Integrationen, PR- & Daily-Runs.';
const BASE = import.meta.env.BASE_URL ?? '/';
---
<BaseLayout lang={lang} title={pageTitle} description={pageDescription}>
  <h1 class="text-3xl font-bold mb-6 text-center">Fallstudien</h1>
  <p class="max-w-3xl mx-auto mb-10 text-neutral-700 dark:text-neutral-300 text-center">
    Kurze “Light”-Zusammenfassungen vor den ausführlichen Berichten. Konkrete Zahlen sind aus NDA-Gründen verallgemeinert.
  </p>

  <!-- Xpollens -->
  <article class="mb-12">
    <h2 class="text-2xl font-semibold mb-2 text-blue-600 dark:text-blue-400">Xpollens (BPCE-Gruppe)</h2>
    <figure class="mb-4">
      <img
        src={`${BASE}images/cases/xpollens/hero.svg`}
        alt="Xpollens — CI/CD-Pipeline und kritische Banking-Abläufe"
        loading="lazy"
        class="w-full rounded-2xl shadow-sm"
      />
      <figcaption class="mt-2 text-sm text-neutral-600 dark:text-neutral-400">
        Von Grund auf: E2E/API-Automatisierung, Azure CI/CD, Teams/E-Mail-Reporting.
      </figcaption>
    </figure>

    <h3 class="text-xl font-semibold mt-4 mb-1">Kontext</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      BaaS-Fintech mit kritischen Produkten (Izly, Bimpli, Money Walkie, Leroy-Merlin-Marketplace, Autodoc SEPA, Nirio/FDJ…).
      Zu Beginn: keine Automatisierung, 7 Squads mit manueller QA, lange NR-Checklisten, periodische Incidents, strenge Regulierung.
    </p>

    <h3 class="text-xl font-semibold mt-4 mb-1">Ziele</h3>
    <ul class="list-disc pl-5 mb-3 text-neutral-700 dark:text-neutral-300 space-y-1">
      <li>Start von E2E/API-Automatisierung und Absicherung monetärer &amp; Konto-Flows.</li>
      <li>Industrialisiertes <strong>Azure DevOps</strong> (Build/Test/Report) inkl. Prod-Smoke.</li>
      <li>Manuelle NR verringern; Triage/Observability strukturieren.</li>
    </ul>

    <h3 class="text-xl font-semibold mt-4 mb-1">Vorgehen & Resultate</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      C#-Framework (SpecFlow/Selenium/RestSharp), stabile Selektoren &amp; anonymisierte Daten, begrenzte Retries.
      2 Läufe/Tag, Teams+E-Mail-Reports, Screenshots/Logs. ≈100 % kritische Abdeckung bis M6, manuelle Arbeit halbiert,
      −23 % Prod-Incidents im Jahr 1.
    </p>

    <p class="mt-4">
      <a href={`${BASE}de/cases/xpollens`} class="inline-block px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700">
        Zur Fallstudie
      </a>
    </p>
  </article>

  <!-- Ornikar -->
  <article class="mb-12">
    <h2 class="text-2xl font-semibold mb-2 text-blue-600 dark:text-blue-400">Ornikar Versicherung</h2>
    <figure class="mb-4">
      <img
        src={`${BASE}images/cases/ornikar/i18n/de/hero.svg`}
        alt="Ornikar (Versicherung) — QA-Automatisierung & CI/CD, Tarife, Zahlung, integrierte Vergleicher"
        loading="lazy"
        class="w-full rounded-2xl shadow-sm"
      />
      <figcaption class="mt-2 text-sm text-neutral-600 dark:text-neutral-400">
        Robustes E2E (10 Profile), PR- & Daily-Runs, Vergleicher (LesFurets, LeLynx, MeilleureAssurance).
      </figcaption>
    </figure>

    <h3 class="text-xl font-semibold mt-4 mb-1">Kontext</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      E2E-Tests der Kfz-Versicherungsplattform: Kontoanlage, Tarif (44 M Fahrzeuge, 3 Tarife), Zahlung.
      Validierung der Integration von drei externen Vergleichern mit unterschiedlichen Anforderungen und Datenmodellen.
    </p>

    <h3 class="text-xl font-semibold mt-4 mb-1">Ziele</h3>
    <ul class="list-disc pl-5 mb-3 text-neutral-700 dark:text-neutral-300 space-y-1">
      <li>Bestehendes E2E stabilisieren und kritische Journeys absichern.</li>
      <li>Maximal automatisieren trotz fehlender dedizierter Umgebungen der Vergleicher.</li>
      <li>Releases beschleunigen via PR- und tägliche Ausführungen.</li>
    </ul>

    <h3 class="text-xl font-semibold mt-4 mb-1">Vorgehen & Resultate</h3>
    <p class="mb-3 text-neutral-700 dark:text-neutral-300">
      TS/React, Selenium/Playwright, Appium, Jenkins+K8s, Xray. Page Objects, Data-Builder, kontrollierte Randomisierung,
      begrenzte Retries & progressive Waits. 2 Läufe/Tag (~25 Min), PR-Runs, Screenshots/API-Logs, Slack/E-Mail-Benachrichtigungen.
      100 % kritische Journeys ab M1, Stabilität deutlich erhöht; manuelle Tests gezielt für Vergleicher.
    </p>

    <p class="mt-4">
      <a href={`${BASE}de/cases/ornikar`} class="inline-block px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700">
        Zur Fallstudie
      </a>
    </p>
  </article>
</BaseLayout>
