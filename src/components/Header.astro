---
import LangSwitcher from './LangSwitcher.astro';

const { lang = 'fr' } = Astro.props;

// i18n
const t = {
  fr: { home:'Accueil', services:'Services', cases:'Cas', about:'À propos', blog:'Blog', contact:'Contact', menu:'Menu' },
  en: { home:'Home', services:'Services', cases:'Cases', about:'About', blog:'Blog', contact:'Contact', menu:'Menu' },
  de: { home:'Startseite', services:'Dienstleistungen', cases:'Referenzen', about:'Über mich', blog:'Blog', contact:'Kontakt', menu:'Menü' },
  pt: { home:'Início', services:'Serviços', cases:'Projetos', about:'Sobre', blog:'Blog', contact:'Contato', menu:'Menu' },
}[lang] ?? {
  home:'Accueil', services:'Services', cases:'Cas', about:'À propos', blog:'Blog', contact:'Contact', menu:'Menu'
};

const items = [
  { href: `/${lang}`, label: t.home },
  { href: `/${lang}/services`, label: t.services },
  { href: `/${lang}/cases`, label: t.cases },
  { href: `/${lang}/about`, label: t.about },
  { href: `/${lang}/blog`, label: t.blog },
  { href: `/${lang}/contact`, label: t.contact },
];

const current = (Astro.url?.pathname ?? '/').replace(/\/$/, '');
const isActive = (href: string) => {
  const h = href.replace(/\/$/, '');
  if (h === `/${lang}`) return current === h;
  return current.startsWith(h);
};
---
<header class="sticky top-0 z-50 border-b border-neutral-200 dark:border-neutral-800 bg-white dark:bg-neutral-950">
  <div class="container mx-auto px-4">
    <div class="h-14 flex items-center justify-between">
      <a href={`/${lang}`} class="text-xl font-semibold tracking-tight text-blue-600 dark:text-blue-400">Alexis Fiska</a>

      <!-- Desktop -->
      <nav class="hidden md:flex items-center gap-6" aria-label="Primary">
        {items.map((it) => (
          <a href={it.href}
             class={`text-sm font-medium hover:text-blue-600 dark:hover:text-blue-400
                     ${isActive(it.href) ? 'text-blue-700 dark:text-blue-300' : 'text-neutral-700 dark:text-neutral-200'}`}>
            {it.label}
          </a>
        ))}
      </nav>

      <!-- Lang + burger (mobile) -->
      <div class="flex items-center gap-2">
        <LangSwitcher currentLang={lang} />
        <button id="menu-open"
          class="md:hidden inline-flex items-center justify-center rounded-lg p-2 hover:bg-neutral-100 dark:hover:bg-neutral-800"
          aria-label="Ouvrir le menu" aria-haspopup="dialog" aria-controls="mobile-menu" aria-expanded="false">
          <svg width="22" height="22" viewBox="0 0 24 24" fill="none" aria-hidden="true">
            <path d="M4 6h16M4 12h16M4 18h16" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- MENU MOBILE : plein écran, simple, propre -->
  <div id="mobile-menu" role="dialog" aria-modal="true" aria-labelledby="mobile-menu-title"
       aria-hidden="true"
       class="hidden fixed inset-0 z-[60]">
    <!-- Backdrop -->
    <div id="menu-backdrop" class="absolute inset-0 bg-black/50 opacity-0 transition-opacity duration-200 ease-out"></div>

    <!-- Feuille plein écran -->
    <section id="menu-sheet"
      class="absolute inset-0 bg-white dark:bg-neutral-950 flex flex-col
             opacity-0 translate-y-2 transition-all duration-200 ease-out">
      <div class="h-14 px-4 flex items-center justify-between border-b border-neutral-200 dark:border-neutral-800">
        <span id="mobile-menu-title" class="text-xs uppercase tracking-wide text-neutral-500 dark:text-neutral-400">{t.menu}</span>
        <button id="menu-close" class="inline-flex items-center justify-center rounded-lg p-2 hover:bg-neutral-100 dark:hover:bg-neutral-800" aria-label="Fermer le menu">
          <svg width="22" height="22" viewBox="0 0 24 24" fill="none" aria-hidden="true">
            <path d="M6 6l12 12M18 6l-12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      </div>

      <nav class="px-3 py-2 grow overflow-y-auto" aria-label="Mobile">
        <ul class="space-y-1">
          {items.map((it) => (
            <li>
              <a href={it.href}
                 class={`block rounded-xl px-3 py-3 text-[16px] font-medium
                         hover:bg-neutral-100 dark:hover:bg-neutral-800
                         ${isActive(it.href) ? 'bg-blue-50 text-blue-700 dark:bg-blue-950/40 dark:text-blue-200' : 'text-neutral-900 dark:text-neutral-100'}`}>
                {it.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>

      <div class="px-3 py-3 border-t border-neutral-200 dark:border-neutral-800">
        <LangSwitcher currentLang={lang} />
      </div>
    </section>
  </div>

  <!-- JS simple (sans TS) -->
  <script is:inline>
    (function () {
      const root = document.getElementById('mobile-menu');
      const openBtn = document.getElementById('menu-open');
      const closeBtn = document.getElementById('menu-close');
      const backdrop = document.getElementById('menu-backdrop');
      const sheet = document.getElementById('menu-sheet');

      if (!root || !openBtn || !closeBtn || !backdrop || !sheet) return;

      function open() {
        root.classList.remove('hidden');
        root.setAttribute('aria-hidden', 'false');
        openBtn.setAttribute('aria-expanded', 'true');
        document.body.classList.add('overflow-hidden');

        requestAnimationFrame(() => {
          backdrop.classList.add('opacity-100');
          sheet.classList.remove('opacity-0','translate-y-2');
          sheet.classList.add('opacity-100','translate-y-0');
        });

        // Fermer au clic d’un lien
        sheet.querySelectorAll('a[href]').forEach(a => a.addEventListener('click', close, { once: true }));
        document.addEventListener('keydown', onKeyDown);
      }

      function close() {
        backdrop.classList.remove('opacity-100');
        sheet.classList.add('opacity-0','translate-y-2');
        openBtn.setAttribute('aria-expanded', 'false');
        document.body.classList.remove('overflow-hidden');

        const done = () => {
          root.classList.add('hidden');
          root.setAttribute('aria-hidden', 'true');
          sheet.removeEventListener('transitionend', done);
          if (openBtn.focus) openBtn.focus();
          document.removeEventListener('keydown', onKeyDown);
        };
        sheet.addEventListener('transitionend', done, { once: true });
      }

      function onKeyDown(e) { if (e.key === 'Escape') close(); }

      openBtn.addEventListener('click', open);
      closeBtn.addEventListener('click', close);
      backdrop.addEventListener('click', close);
    })();
  </script>
</header>
