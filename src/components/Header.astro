---
import LangSwitcher from './LangSwitcher.astro';

const { lang = 'fr' } = Astro.props;

const t =
  {
    fr:{home:'Accueil',services:'Services',cases:'Cas',about:'À propos',blog:'Blog',contact:'Contact',menu:'ALEXIS FISKA'},
    en:{home:'Home',services:'Services',cases:'Cases',about:'About',blog:'Blog',contact:'Contact',menu:'ALEXIS FISKA'},
    de:{home:'Startseite',services:'Dienstleistungen',cases:'Referenzen',about:'Über mich',blog:'Blog',contact:'Kontakt',menu:'ALEXIS FISKA'},
    pt:{home:'Início',services:'Serviços',cases:'Projetos',about:'Sobre',blog:'Blog',contact:'Contato',menu:'ALEXIS FISKA'},
  }[lang] ?? {home:'Accueil',services:'Services',cases:'Cas',about:'À propos',blog:'Blog',contact:'Contact',menu:'ALEXIS FISKA'};

const items = [
  { href: `/${lang}`, label: t.home },
  { href: `/${lang}/services`, label: t.services },
  { href: `/${lang}/cases`, label: t.cases },
  { href: `/${lang}/about`, label: t.about },
  { href: `/${lang}/blog`, label: t.blog },
  { href: `/${lang}/contact`, label: t.contact },
];

const current = (Astro.url?.pathname ?? '/').replace(/\/$/, '');
const isActive = (href) => {
  const h = href.replace(/\/$/, '');
  if (h === `/${lang}`) return current === h;
  return current.startsWith(h);
};
---
<header class="sticky top-0 z-50 border-b border-neutral-200 dark:border-neutral-800 bg-white/90 dark:bg-neutral-950/90 backdrop-blur">
  <div class="container mx-auto px-4">
    <div class="h-14 flex items-center justify-between">
      <a href={`/${lang}`} class="text-xl font-semibold tracking-tight text-blue-600 dark:text-blue-400">Alexis Fiska</a>

      <!-- Desktop -->
      <nav class="hidden md:flex items-center gap-6" aria-label="Primary">
        {items.map((it) => (
          <a
            href={it.href}
            class={`text-sm font-medium hover:text-blue-600 dark:hover:text-blue-400 ${
              isActive(it.href) ? 'text-blue-700 dark:text-blue-300' : 'text-neutral-700 dark:text-neutral-200'
            }`}
          >
            {it.label}
          </a>
        ))}
      </nav>

      <!-- Lang + burger -->
      <div class="flex items-center gap-2">
        <LangSwitcher currentLang={lang} />
        <button
          id="menu-open"
          class="md:hidden inline-flex items-center justify-center rounded-lg p-2 hover:bg-neutral-100 dark:hover:bg-neutral-800"
          aria-label="Ouvrir le menu" aria-haspopup="dialog" aria-controls="mobile-menu" aria-expanded="false">
          <svg width="22" height="22" viewBox="0 0 24 24" fill="none" aria-hidden="true">
            <path d="M4 6h16M4 12h16M4 18h16" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- MOBILE DRAWER: plein écran + slide horizontal -->
  <div id="mobile-menu" role="dialog" aria-modal="true" aria-labelledby="mobile-menu-title"
       aria-hidden="true" class="hidden fixed inset-0 z-[60]">
    <!-- Backdrop -->
    <div id="menu-backdrop"
         class="absolute inset-0 bg-black/60 opacity-0 transition-opacity duration-300 ease-out"></div>

    <!-- Panneau PLEIN ÉCRAN -->
    <section id="menu-panel"
      class="absolute inset-0 h-[100dvh] w-screen
             bg-white dark:bg-neutral-900 shadow-2xl ring-1 ring-black/5 dark:ring-white/10
             flex flex-col transform-gpu translate-x-full
             transition-transform duration-300 ease-out overscroll-contain">
      <!-- Barre titre -->
      <div class="h-14 w-full px-4 flex items-center justify-between border-b border-neutral-200 dark:border-neutral-800">
        <span id="mobile-menu-title" class="text-xs uppercase tracking-wide text-neutral-500 dark:text-neutral-400">{t.menu}</span>
        <button id="menu-close" class="inline-flex items-center justify-center rounded-lg p-2 hover:bg-neutral-100 dark:hover:bg-neutral-800" aria-label="Fermer le menu">
          <svg width="22" height="22" viewBox="0 0 24 24" fill="none" aria-hidden="true">
            <path d="M6 6l12 12M18 6l-12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      </div>

      <!-- Liste scrollable -->
      <nav class="px-4 py-3 grow overflow-y-auto" aria-label="Mobile">
        <ul class="space-y-1">
          {items.map((it) => (
            <li>
              <a href={it.href}
                class={`block rounded-xl px-3 py-3 text-[16px] font-medium
                        hover:bg-neutral-100 dark:hover:bg-neutral-800
                        ${isActive(it.href) ? 'bg-blue-50 text-blue-700 dark:bg-blue-950/40 dark:text-blue-200' : 'text-neutral-900 dark:text-neutral-100'}`}>
                {it.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>

<!-- Footer bas + safe-area (mobile-only language flags) -->
<div class="px-4 py-4 border-t border-neutral-200 dark:border-neutral-800 pb-[calc(env(safe-area-inset-bottom)+1rem)]">
  <div id="lang-flags" data-current-lang={lang} class="grid grid-cols-4 gap-3 justify-items-center">
    <!-- FR -->
    <a data-lang="fr" aria-label="Français" class="rounded-lg p-1 bg-white/70 dark:bg-neutral-800/70 hover:ring-2 hover:ring-blue-500 focus:ring-2 focus:ring-blue-500">
      <svg width="36" height="36" viewBox="0 0 24 24" aria-hidden="true">
        <rect width="24" height="24" rx="4" fill="#fff"/>
        <rect x="0" y="0" width="8" height="24" rx="4" fill="#1e40af"/>
        <rect x="16" y="0" width="8" height="24" rx="4" fill="#dc2626"/>
      </svg>
      <span class="sr-only">FR</span>
    </a>

    <!-- EN (UK flag stylised) -->
    <a data-lang="en" aria-label="English" class="rounded-lg p-1 bg-white/70 dark:bg-neutral-800/70 hover:ring-2 hover:ring-blue-500 focus:ring-2 focus:ring-blue-500">
      <svg width="36" height="36" viewBox="0 0 24 24" aria-hidden="true">
        <rect width="24" height="24" rx="4" fill="#1e3a8a"/>
        <path d="M0 8h24M0 16h24" stroke="#fff" stroke-width="4"/>
        <path d="M8 0v24M16 0v24" stroke="#fff" stroke-width="4"/>
        <path d="M0 6h24M0 18h24M6 0v24M18 0v24" stroke="#dc2626" stroke-width="2"/>
      </svg>
      <span class="sr-only">EN</span>
    </a>

    <!-- DE -->
    <a data-lang="de" aria-label="Deutsch" class="rounded-lg p-1 bg-white/70 dark:bg-neutral-800/70 hover:ring-2 hover:ring-blue-500 focus:ring-2 focus:ring-blue-500">
      <svg width="36" height="36" viewBox="0 0 24 24" aria-hidden="true">
        <rect width="24" height="24" rx="4" fill="#000"/>
        <rect y="8" width="24" height="8" fill="#dc2626"/>
        <rect y="16" width="24" height="8" rx="4" fill="#fbbf24"/>
      </svg>
      <span class="sr-only">DE</span>
    </a>

    <!-- PT -->
    <a data-lang="pt" aria-label="Português" class="rounded-lg p-1 bg-white/70 dark:bg-neutral-800/70 hover:ring-2 hover:ring-blue-500 focus:ring-2 focus:ring-blue-500">
      <svg width="36" height="36" viewBox="0 0 24 24" aria-hidden="true">
        <rect width="24" height="24" rx="4" fill="#dc2626"/>
        <rect width="10" height="24" rx="4" fill="#15803d"/>
        <circle cx="10" cy="12" r="3.5" fill="#fbbf24" stroke="#fff" stroke-width="1"/>
      </svg>
      <span class="sr-only">PT</span>
    </a>
  </div>

  <!-- build the correct target URLs on the fly (same path, different lang prefix) -->
  <script is:inline>
    (function () {
      const root = document.getElementById('lang-flags');
      if (!root) return;
      const current = root.dataset.currentLang;
      const supported = ['fr','en','de','pt'];

      function switchPath(lang) {
        try {
          const parts = location.pathname.split('/');
          // path is like /fr/...; if not prefixed, insert at index 1
          if (supported.includes(parts[1])) parts[1] = lang;
          else parts.splice(1, 0, lang);
          // normalise double slashes
          return parts.join('/').replace(/\/{2,}/g, '/');
        } catch (_) {
          return '/' + lang;
        }
      }

      root.querySelectorAll('a[data-lang]').forEach(a => {
        const lang = a.getAttribute('data-lang');
        a.setAttribute('href', switchPath(lang));
        if (lang === current) a.classList.add('ring-2','ring-blue-500');
      });
    })();
  </script>
</div>
    </section>
  </div>

  <!-- JS pur : slide horizontal, pas d’ESC -->
  <script is:inline>
    (function () {
      const root = document.getElementById('mobile-menu');
      const openBtn = document.getElementById('menu-open');
      const closeBtn = document.getElementById('menu-close');
      const backdrop = document.getElementById('menu-backdrop');
      const panel = document.getElementById('menu-panel');
      if (!root || !openBtn || !closeBtn || !backdrop || !panel) return;

      function open() {
        root.classList.remove('hidden');
        root.setAttribute('aria-hidden', 'false');
        openBtn.setAttribute('aria-expanded', 'true');
        document.documentElement.classList.add('overflow-hidden');

        // Assure la transition (Safari/iOS) : reflow + RAF
        panel.getBoundingClientRect();
        requestAnimationFrame(() => {
          backdrop.classList.add('opacity-100');       // fade-in backdrop
          panel.classList.remove('translate-x-full');  // slide-in
        });

        // Fermer au clic d’un lien
        panel.querySelectorAll('a[href]').forEach(a => a.addEventListener('click', close, { once: true }));
      }

      function close() {
        backdrop.classList.remove('opacity-100');      // fade-out
        panel.classList.add('translate-x-full');       // slide-out
        openBtn.setAttribute('aria-expanded', 'false');
        document.documentElement.classList.remove('overflow-hidden');

        const done = () => {
          root.classList.add('hidden');
          root.setAttribute('aria-hidden', 'true');
          panel.removeEventListener('transitionend', done);
          if (openBtn.focus) openBtn.focus();
        };
        panel.addEventListener('transitionend', done, { once: true });
      }

      openBtn.addEventListener('click', open);
      closeBtn.addEventListener('click', close);
      backdrop.addEventListener('click', close);
    })();
  </script>
</header>
